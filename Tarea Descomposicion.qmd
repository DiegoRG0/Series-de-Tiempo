---
title: "Tarea Descomposicion"
format:
    html:
    embed-resources: true
  toc: true
---


```{r}
#| message: false
library(fma)
library(ggplot2)
library(dplyr)
library(forecast)
library(TSA)
library(tsibbledata)
```


```{r}
global_economy
```


```{r}
data("global_economy")
global_economy %>%
  group_by(Country) %>%
  mutate(PIB_per_capita = GDP/Population) %>%
  ggplot(aes(x = Year, y = PIB_per_capita, color = Country)) +
  geom_line() +
  theme(legend.position = "none") +
  labs(x = "Año", y = "PIB per cápita", title = "Evolución del PIB per cápita por país")

```
```{r}
data("global_economy")
data("vic_elec")

ggplot() +
  geom_line(data = subset(global_economy, Country == "USA"), aes(x = Year, y = GDP), color = "blue") +
  geom_line(data = subset(global_economy, Country == "Mexico"), aes(x = Year, y = GDP), color = "red") +
  labs(x = "Año", y = "PIB", title = "PIB de EEUU y México")

ggplot(data = vic_elec, aes(x = Date, y = Demand)) +
  geom_line() +
  labs(x = "Fecha", y = "Demanda de electricidad", title = "Demanda de electricidad en Victoria, Australia")

```

```{r}
# Verificar los nombres de las columnas
names(plastics)

# Verificar la estructura del dataframe
str(plastics)

```



```{r}
data("plastics")

plot(plastics, main = "Ventas mensuales del Producto A", ylab = "Ventas (miles)", xlab = "Tiempo")


```

```{r}
decomp <- decompose(plastics)

trend <- decomp$trend
seasonal <- decomp$seasonal
random <- decomp$random

desestacionalizado <- plastics / seasonal

plot(desestacionalizado, main = "Datos desestacionalizados del Producto A", 
     ylab = "Ventas (miles)", xlab = "Tiempo")


```

```{r}
plastics_with_outlier <- plastics
plastics_with_outlier[3] <- plastics_with_outlier[3] + 500

decomp_with_outlier <- decompose(plastics_with_outlier)
desestacionalizado_with_outlier <- plastics_with_outlier / decomp_with_outlier$seasonal

plot(desestacionalizado_with_outlier, main = "Datos desestacionalizados con outlier", 
     ylab = "Ventas (miles)", xlab = "Tiempo")


```



